version: 2

references:
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        # when lock file changes, use increasingly general patterns to restore cache
        - npm-packages-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum "examples/with-next/package-lock.json" }}
        - npm-packages-v1-{{ .Branch }}-
        - npm-packages-v1-

  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - node_modules/
        - examples/with-next/node_modules/
      key: npm-packages-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}-{{ checksum "examples/with-next/package-lock.json" }}

jobs:
  build:
    docker:
      - image: circleci/node:12
    working_directory: ~/spokestack
    steps:
      - checkout
      - *restore_npm_cache
      - run: npm install --no-save
      - run: cd examples/with-next && npm install --no-save
      - *save_npm_cache

      - run:
          name: Run tests
          command: npm test

      - run:
          name: Run build
          command: npm run build

      - run:
          name: Run build examples/with-next
          command: cd examples/with-next && npm run build

  deploy_integration:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/spokestack
    steps:
      - checkout
      - setup_remote_docker

      # attach build already done
      - attach_workspace:
          at: ~/spokestack

      # update the service
      - run:
          name: Push the node server and update the ecs service
          command: |
            python3 -m venv ~/venv
            source ~/venv/bin/activate
            pip install awscli
            aws configure set region us-east-1
            deploy/update.sh integration

  deploy_production:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/spokestack
    steps:
      - checkout
      - setup_remote_docker

      # attach build already done
      - attach_workspace:
          at: ~/spokestack

      # update the service
      - run:
          name: Push the node server and update the ecs service
          command: |
            python3 -m venv ~/venv
            source ~/venv/bin/activate
            pip install awscli
            aws configure set region us-east-1
            deploy/update.sh production

workflows:
  version: 2

  test_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only:
                - /\d+\.\d+\.\d+/
      - deploy_integration:
          filters:
            branches:
              only: develop
          requires:
            - build
      - deploy_production:
          filters:
            branches:
              only: production
            tags:
              only:
                - /\d+\.\d+\.\d+/
          requires:
            - build
